---
layout: post
title: "Octopress: Six Months In"
date: 2014-01-15 12:00
published: false
comments: true
categories: octopress blogging WordPress
---
When I was a week into this blog, I wrote down some of the reasons I liked Octopress, and my initial impressions of it as a blogging platform that can compete with WordPress, the platform for which I have the most expertise and am most likely to recommend to just about anyone trying to create a website. In general I have found Octopress to be an interesting experiment in hacker blogging but I'll probably be switching back to WordPress soon.

Starting, as I did before, with what I still like about Octopress, there is still a lot here. 

1. I still love writing in Markdown. WordPress.com recently added Markdown support, so it's only a matter of time before I can write in Markdown there, but being able to practice What You See is What You Mean (WYSIWYM) more closely in Octopress is really quite convenient. When I write on WordPress blogs at work these days I often forget it's either straight HTML (too cumbersome) or the TinyMCE What You See Is What You Get (WYSIWYG) editor (too unreliable).
2. Simple local previews are another thing I really love. `rake preview` is up there with Django's `./manage.py runserver` test server in simplicity. What I would change is that the rake server is not nearly as competent as Django's when it comes to regenerating sites after making changes and letting you know about errors. For example, using quotation marks in categories causes errors in site generation with Octopress but the only output in the terminal is the somewhat unhelpful `WARN  Could not determine content-length of response body. Set content-length of the response or set Response#chunked = true`. To me, that could mean any of a lot of different things. Nevertheless it is quite simple to get a full, local, site preview while you're still editing.
3. Accidental publishing happens less frequently. This relates to 2 in that you have to be pretty deliberate about publishing the post for the world to see. Saving the file locally preserves your work. `rake preview` let's you see it in a browser (almost) exactly as it should appear. Getting it out in the public, however requires `rake gen_deploy` run from the terminal.

With all that said, there's still a lot where OctoPress comes up short. The mobile app bit mentioned before matters less to me these days as I'm increasingly on the go with a laptop. Since everything I need for my blog lives on GitHub, I can pretty much grab my blog and start working with it even if I'm not on my own computer. Configuring a full working copy is probably a bit more work than it's worth on any machine that is not mine. Most of what I miss enough to consider switching is related to the WordPress UI, and the BYOUI philosophy has some serious flaws.

1. Drafting posts. In WordPress, your post isn't given a published date until you hit Publish, at which point it records the exact moment in time you hit publish as the date posted. In Octopress, this timestamp is added as soon as you execute `rake new_post[]`. I'm a drafter. Sometimes I'll start three blog posts to get some ideas on the page and then put them aside until I have time work on them. December 23, for example, I wrote [Why Unit Testing Matters](http://greg.harmsboone.org/blog/2013/12/23/why-unit-testing-in-wordpress-matters/) in one go. But I also started two follow on posts about writing good unit and integration tests. I ran `rake new_post` three times and each post had the same publish date even though the last two hadn't been published yet! When I `rake deploy`ed, I had the post I wanted buried under two empty posts. When I finally finished the first of the others it was 2014 and I had to manually change the date and time as well as the published status. Now I'm writing this one ahead of another couple drafts I started. Manually manging the dates of each file name and the YAML data is incredibly frustrating and begs for a database to do it for me.
2. Visualizing published work. A blogging UI that can list posts and organize them by date and time published or category is incredibly useful when trying to reference older works. As is being able to quickly copy the permalink out of the admin and paste it into a link block. Octopress has no such mechanism and URLs can get really long.
3. Version control over posts. This doesn't matter to me as much anymore as it did in August. Markdown doesn't version control very well anyway since lines are sometimes thousands of lines long. Also, with WordPress's new drafting system, keeping track of changes in the post content is trivial and much more visual that it ever has been.

Someone tweeted recently that static sites are the fixies of the Internet and I find that a compelling metaphor. To extrapolate it to [my favorite bike company](http://surlybikes.com), WordPress is a complete Long Haul Trucker. Well built, and reliable enough to last you a long time. Octopress is the Cross-Check frame. It looks like it can do a lot but it's sort of up to you to decide whether you want it fixie, single speed, or a full racing bike. It should be nible once you get it up and going, and you have a lot more freedom as to how you get there, but you have to build it. And at first it might not be obvious which methods are the most effective.